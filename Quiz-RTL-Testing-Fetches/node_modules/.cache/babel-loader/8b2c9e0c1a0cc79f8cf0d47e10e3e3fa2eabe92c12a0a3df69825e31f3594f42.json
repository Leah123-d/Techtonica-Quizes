{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useCallback } from 'react';\nconst useAPI = (initialData = null) => {\n  _s();\n  const initialState = {\n    data: initialData,\n    success: false,\n    loading: false,\n    error: null\n  };\n  const [response, setResponse] = useState(initialState);\n  const callAPI = async (URL, options = {\n    method: 'GET'\n  }) => {\n    setResponse({\n      ...response,\n      success: false,\n      loading: true\n    });\n    try {\n      const response = await fetch(URL, options);\n      if (response.status < 200 || response.status >= 300) throw new Error(\"Failed to fetch\");\n      const json = await response.json();\n      setResponse({\n        data: json,\n        success: true,\n        loading: false,\n        error: null\n      });\n    } catch (e) {\n      setResponse({\n        data: initialData,\n        success: false,\n        loading: false,\n        error: e.message\n      });\n    }\n  };\n  return [response, useCallback(callAPI, [])];\n};\n_s(useAPI, \"TwFkTpy6uMANwhiLeajDKwX2+sA=\");\nexport default useAPI;","map":{"version":3,"names":["useState","useCallback","useAPI","initialData","_s","initialState","data","success","loading","error","response","setResponse","callAPI","URL","options","method","fetch","status","Error","json","e","message"],"sources":["/Users/leahputlek/Techtonica/assignments/Quiz/Quiz-RTL-Testing-Fetches/src/useAPI.js"],"sourcesContent":["import { useState, useCallback } from 'react';\n\nconst useAPI = (initialData = null) => {\n  const initialState = { \n    data: initialData, \n    success: false,\n    loading: false, \n    error: null \n  };\n\n  const [response, setResponse] = useState(initialState);\n\n  const callAPI = async (URL, options = { method: 'GET' }) => {\n    setResponse({...response, success: false, loading: true});\n    try {\n      const response = await fetch(URL, options);\n      if ( response.status < 200 || response.status >= 300) throw new Error(\"Failed to fetch\")\n      const json = await response.json();\n      setResponse({\n        data: json,\n        success: true,\n        loading: false,\n        error: null,\n      });\n    } catch(e) {\n      setResponse({\n        data: initialData, \n        success: false, \n        loading: false, \n        error: e.message\n      });\n    }\n  }\n\n  return [response, useCallback(callAPI, [])];\n}\n\nexport default useAPI;"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAE7C,MAAMC,MAAM,GAAGA,CAACC,WAAW,GAAG,IAAI,KAAK;EAAAC,EAAA;EACrC,MAAMC,YAAY,GAAG;IACnBC,IAAI,EAAEH,WAAW;IACjBI,OAAO,EAAE,KAAK;IACdC,OAAO,EAAE,KAAK;IACdC,KAAK,EAAE;EACT,CAAC;EAED,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAACK,YAAY,CAAC;EAEtD,MAAMO,OAAO,GAAG,MAAAA,CAAOC,GAAG,EAAEC,OAAO,GAAG;IAAEC,MAAM,EAAE;EAAM,CAAC,KAAK;IAC1DJ,WAAW,CAAC;MAAC,GAAGD,QAAQ;MAAEH,OAAO,EAAE,KAAK;MAAEC,OAAO,EAAE;IAAI,CAAC,CAAC;IACzD,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMM,KAAK,CAACH,GAAG,EAAEC,OAAO,CAAC;MAC1C,IAAKJ,QAAQ,CAACO,MAAM,GAAG,GAAG,IAAIP,QAAQ,CAACO,MAAM,IAAI,GAAG,EAAE,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;MACxF,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACS,IAAI,CAAC,CAAC;MAClCR,WAAW,CAAC;QACVL,IAAI,EAAEa,IAAI;QACVZ,OAAO,EAAE,IAAI;QACbC,OAAO,EAAE,KAAK;QACdC,KAAK,EAAE;MACT,CAAC,CAAC;IACJ,CAAC,CAAC,OAAMW,CAAC,EAAE;MACTT,WAAW,CAAC;QACVL,IAAI,EAAEH,WAAW;QACjBI,OAAO,EAAE,KAAK;QACdC,OAAO,EAAE,KAAK;QACdC,KAAK,EAAEW,CAAC,CAACC;MACX,CAAC,CAAC;IACJ;EACF,CAAC;EAED,OAAO,CAACX,QAAQ,EAAET,WAAW,CAACW,OAAO,EAAE,EAAE,CAAC,CAAC;AAC7C,CAAC;AAAAR,EAAA,CAjCKF,MAAM;AAmCZ,eAAeA,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}