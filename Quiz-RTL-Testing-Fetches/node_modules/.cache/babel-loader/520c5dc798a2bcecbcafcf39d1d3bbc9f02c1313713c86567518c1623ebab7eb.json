{"ast":null,"code":"var _jsxFileName = \"/Users/leahputlek/Techtonica/assignments/Quiz/Quiz-RTL-Testing-Fetches/src/components/MultipleFetches.js/MultipleFetches.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport useAPI from '../../useAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MultipleFetches = () => {\n  _s();\n  const [postResponse, callPostAPI] = useAPI();\n  const [commentsResponse, callCommentsAPI] = useAPI();\n  useEffect(() => {\n    if (postResponse.success) {\n      callCommentsAPI(\"https://jsonplaceholder.typicode.com/posts/1/comments\");\n    }\n  }, [postResponse.success, callCommentsAPI]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => callPostAPI(\"https://jsonplaceholder.typicode.com/posts/1\"),\n      children: \"Fetch post and comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [postResponse.loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        \"data-testid\": \"fetch-loading-post\",\n        children: \"Loading post...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 34\n      }, this), postResponse.error && /*#__PURE__*/_jsxDEV(\"div\", {\n        \"data-testid\": \"fetch-error-post\",\n        children: postResponse.error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 32\n      }, this), postResponse.success && /*#__PURE__*/_jsxDEV(\"div\", {\n        \"data-testid\": \"fetch-post\",\n        children: postResponse.data.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), !postResponse.loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [commentsResponse.loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        \"data-testid\": \"fetch-loading-comments\",\n        children: \"Loading comments...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 38\n      }, this), commentsResponse.error && /*#__PURE__*/_jsxDEV(\"div\", {\n        \"data-testid\": \"fetch-error-comments\",\n        children: commentsResponse.error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 36\n      }, this), commentsResponse.success && /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: commentsResponse.data.slice(0, 10).map(comment => /*#__PURE__*/_jsxDEV(\"li\", {\n          \"data-testid\": \"comment-author\",\n          children: comment.name\n        }, comment.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 33\n    }, this), postResponse.success && commentsResponse.success && /*#__PURE__*/_jsxDEV(\"div\", {\n      \"data-testid\": \"multiple-fetch-success\",\n      children: \"All fetched!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(MultipleFetches, \"CUgfsjPeTGKNJ/LRrW+2hfNv1Sk=\", false, function () {\n  return [useAPI, useAPI];\n});\n_c = MultipleFetches;\nexport default MultipleFetches;\nvar _c;\n$RefreshReg$(_c, \"MultipleFetches\");","map":{"version":3,"names":["React","useEffect","useAPI","jsxDEV","_jsxDEV","MultipleFetches","_s","postResponse","callPostAPI","commentsResponse","callCommentsAPI","success","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","loading","error","data","title","slice","map","comment","name","id","_c","$RefreshReg$"],"sources":["/Users/leahputlek/Techtonica/assignments/Quiz/Quiz-RTL-Testing-Fetches/src/components/MultipleFetches.js/MultipleFetches.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport useAPI from '../../useAPI';\n\nconst MultipleFetches = () => {\n  const [postResponse, callPostAPI] = useAPI();\n  const [commentsResponse, callCommentsAPI] = useAPI();\n\n  useEffect(() => {\n    if ( postResponse.success ) {\n      callCommentsAPI(\"https://jsonplaceholder.typicode.com/posts/1/comments\");\n    }\n  }, [postResponse.success, callCommentsAPI]);\n\n  return (\n    <div>\n      <button onClick={() => callPostAPI(\"https://jsonplaceholder.typicode.com/posts/1\")}>\n        Fetch post and comments\n      </button>\n      <div>\n        {postResponse.loading && <div data-testid=\"fetch-loading-post\">\n          Loading post...\n        </div>}\n        {postResponse.error && <div data-testid=\"fetch-error-post\">\n          {postResponse.error}\n        </div>}\n        {postResponse.success && <div data-testid=\"fetch-post\">\n          {postResponse.data.title}\n        </div>}\n      </div>\n      {!postResponse.loading && <div>\n        {commentsResponse.loading && <div data-testid=\"fetch-loading-comments\">\n          Loading comments...\n        </div>}\n        {commentsResponse.error && <div data-testid=\"fetch-error-comments\">\n          {commentsResponse.error}\n        </div>}\n        {commentsResponse.success && <ul>\n          {commentsResponse.data.slice(0, 10).map(comment => \n            <li key={comment.id} data-testid=\"comment-author\">{comment.name}</li>\n          )}\n        </ul>}\n      </div>}\n      {postResponse.success \n        && commentsResponse.success \n        && <div data-testid=\"multiple-fetch-success\">\n        All fetched!\n      </div>}\n    </div>\n  )\n}\n\nexport default MultipleFetches;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}